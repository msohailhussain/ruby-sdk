-#
-# Copyright 2017, Optimizely and contributors
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#    http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
.container
  / Example row of columns
  = render "shared/tabs"
  .row
    = link_to 'Clear cart',
    delete_cart_path,
    method: :delete,
    data: { confirm: 'Are you sure? want to delete all items!' },
    class:"btn btn-danger #{!@cart.present? ? 'disabled' : ''}"
  %br
  .row
    %table.table.table-xs
      %tr
        %th
        %th Product
        %th.text-right Amount
        %th.text-right Price
        %th.text-right Total
        %th.text-right
      - sum = 0
      - qty = 0
      - @cart.each do |key,value|
        - product = Product.find(key)
        - if product
          - sum+=(value * product[:price])
          - qty = value * product[:price]
          %tr.item-row.product
            %td{style:'width: 8rem;'}
              = image_tag(product[:image_url], class: 'img-thumbnail')
            %td
              %p
                %strong
                  = product[:name]
              %p
                %span Color: #{product[:color]}
                %span Category: #{product[:category]}

            %td.text-right.product-quantity{:title => "Amount"}
              %input{product_id: product[:id], :min => "1", :max=>'100', :type => "number", :value => value, style:'width: 2.5rem;'}/
            %td.text-right.product-price.totals-value{:title => "Price"} #{product[:price]}
            %td.text-right.product-line-price.totals-value{:title => "Total"} #{qty}
            %td.product-removal.text-right{:title => "delete"}
              %button.btn.btn-danger.btn-sm.remove-product{product_id: product[:id]}
                Remove

      - unless @discount_percentage == 0
        %tr
          %td.text-right
          %td.text-right{:colspan => "4"} Subtotal
          %td.text-right.totals-value#cart-subtotal #{sum}
        %tr
          %td.text-right.border-0
          %td.border-0.text-right{:colspan => "4"} Discount (#{@discount_percentage}%)
          %td.border-0.text-right.totals-value#cart-discount #{calculate_percentage(sum, @discount_percentage).to_f}
        %tr
          %td.text-right.border-0
          %td.border-0.text-right{:colspan => "4"} Grand Total
          %td.border-0.text-right.totals-value#cart-total #{cart_total(sum, @discount_percentage).to_f}
      - else
        %tr
          %td.text-right
          %td.text-right{:colspan => "4"} Total
          %td.text-right.totals-value#CartTotal #{sum}
      %tr
        %td.border-0.text-right{:colspan => "8"}
          -if @cart.present?
            = link_to "Checkout",
                checkout_complete_path(user_id: @current_user['user_id']),
                method: :post, class:"btn btn-info btn-lg checkout"


:coffeescript

  DiscountRate = #{@discount_percentage * 0.01}
  fadeTime = 300
  userId = "#{@current_user['user_id']}"
  ### Assign actions ###

  ### Recalculate cart ###
  updateCart = (params) ->
  recalculateCart = ->
    subtotal = 0

    ### Sum up row totals ###

    $('.product').each ->
      subtotal += parseFloat($(this).children('.product-line-price').text())

    ### Calculate totals ###

    discount = subtotal * DiscountRate
    total = subtotal - discount

    ### Update totals display ###

    $('.totals-value').fadeOut fadeTime, ->
      $('#cart-subtotal').html subtotal.toFixed(2)
      $('#cart-discount').html discount.toFixed(2)
      $('#cart-total').html total.toFixed(2)
      if total == 0
        $('.checkout').fadeOut fadeTime
      else
        $('.checkout').fadeIn fadeTime
      $('.totals-value').fadeIn fadeTime

  ### Update quantity ###

  updateQuantity = (quantityInput) ->

    ### Calculate line price ###
    product_id = quantityInput.getAttribute('product_id')
    productRow = $(quantityInput).parent().parent()
    price = parseFloat(productRow.children('.product-price').text())
    quantity = $(quantityInput).val()
    linePrice = price * quantity
    params = {product_id: product_id, quantity: quantity}
    $.ajax
      url: '/demo/'+userId+'/update_cart.json'
      type: 'PUT'
      data: params
      success: (result) ->
        if result.success == true
          ### Update line price display and recalc cart totals ###
          productRow.children('.product-line-price').each ->
            $(this).fadeOut fadeTime, ->
              $(this).text linePrice.toFixed(2)
              recalculateCart()
              $(this).fadeIn fadeTime
        else
          alert result.message
      error: (error) ->
        return false


  ### Remove item from cart ###

  removeItem = (removeButton) ->

    ### Remove row from DOM and recalc cart total ###

    productRow = $(removeButton).parent().parent()
    product_id = removeButton.getAttribute('product_id')
    params = {product_id: product_id, quantity: 0}
    $.ajax
      url: '/demo/'+userId+'/update_cart.json'
      type: 'PUT'
      data: params
      success: (result) ->
        if result.success == true
          productRow.slideUp fadeTime, ->
            productRow.remove()
            recalculateCart()
        else
          alert result.message
      error: (error) ->
        return false

  $('.product-quantity input').change ->
    updateQuantity this

  $('.product-removal button').click ->
    removeItem this
